/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FloatedPage;

import config.dbConnector;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author HP
 */
public class editRoom extends javax.swing.JPanel {

    /**
     * Creates new form editRoom
     */
    public editRoom() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ppn = new Swing.TextField();
        rn = new Swing.TextField();
        rt = new Swing.TextField();
        bt = new Swing.TextField();
        c = new Swing.TextField();
        roundedPanel1 = new Swing.RoundedPanel();
        jLabel1 = new javax.swing.JLabel();
        updateButton = new Swing.Button();
        rnValidation = new javax.swing.JLabel();
        ppnValidation = new javax.swing.JLabel();
        rtValidation = new javax.swing.JLabel();
        btValidation = new javax.swing.JLabel();
        cValidation = new javax.swing.JLabel();
        cancelButton = new javax.swing.JLabel();
        roomIdField = new Swing.TextField();
        status = new Swing.Combobox();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(326, 500));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ppn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ppn.setLabelText("Price Per Night");
        ppn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ppnMousePressed(evt);
            }
        });
        jPanel1.add(ppn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 300, 50));

        rn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        rn.setLabelText("Room Number");
        rn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rnMousePressed(evt);
            }
        });
        jPanel1.add(rn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 300, 50));

        rt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        rt.setLabelText("Room Type");
        rt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rtMousePressed(evt);
            }
        });
        jPanel1.add(rt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 300, 50));

        bt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        bt.setLabelText("Bed Type");
        bt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btMousePressed(evt);
            }
        });
        bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActionPerformed(evt);
            }
        });
        jPanel1.add(bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 300, 50));

        c.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        c.setLabelText("Capacity");
        c.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cMousePressed(evt);
            }
        });
        jPanel1.add(c, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 300, 50));

        roundedPanel1.setBackground(new java.awt.Color(51, 51, 51));
        roundedPanel1.setForeground(new java.awt.Color(255, 255, 255));
        roundedPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Update Room");
        roundedPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, 50));

        jPanel1.add(roundedPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 20, 220, 50));

        updateButton.setBackground(new java.awt.Color(102, 102, 102));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateButtonMouseExited(evt);
            }
        });
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 450, 100, 40));

        rnValidation.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        rnValidation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rnValidation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rnValidation.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(rnValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 270, 20));

        ppnValidation.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        ppnValidation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ppnValidation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ppnValidation.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(ppnValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 270, 20));

        rtValidation.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        rtValidation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rtValidation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rtValidation.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(rtValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 270, 20));

        btValidation.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btValidation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btValidation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btValidation.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(btValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 270, 20));

        cValidation.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        cValidation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cValidation.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cValidation.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(cValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 270, 20));

        cancelButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cancelButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cancelButton.setText("Cancel");
        cancelButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                cancelButtonMouseDragged(evt);
            }
        });
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });
        jPanel1.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, 70, 40));

        roomIdField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        roomIdField.setLabelText("Room ID");
        roomIdField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                roomIdFieldMousePressed(evt);
            }
        });
        roomIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomIdFieldActionPerformed(evt);
            }
        });
        jPanel1.add(roomIdField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 300, 50));

        status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Available", "Booked", "Maintenance" }));
        status.setLabeText("");
        jPanel1.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 330, 300, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ppnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ppnMousePressed
        ppnValidation.setText("");
    }//GEN-LAST:event_ppnMousePressed

    private void rnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rnMousePressed
        rnValidation.setText("");
    }//GEN-LAST:event_rnMousePressed

    private void rtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rtMousePressed
        rtValidation.setText("");
    }//GEN-LAST:event_rtMousePressed

    private void btMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btMousePressed
        btValidation.setText("");
    }//GEN-LAST:event_btMousePressed

    private void cMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMousePressed
        cValidation.setText("");
    }//GEN-LAST:event_cMousePressed

    private void updateButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseEntered
        updateButton.setBackground(new Color(51,51,51));
    }//GEN-LAST:event_updateButtonMouseEntered

    private void updateButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseExited
        updateButton.setBackground(new Color(102,102,102));
    }//GEN-LAST:event_updateButtonMouseExited

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        String roomNumber = rn.getText().trim();
        String roomType = rt.getText().trim();
        String bedType = bt.getText().trim();
        String capacity = c.getText().trim();
        String pricePerNight = ppn.getText().trim();

        boolean isValid = true;

        // Validate room number
        if (roomNumber.isEmpty()) {
            rnValidation.setText("Field is empty");
            rnValidation.setForeground(Color.RED);
            rnValidation.setFont(new Font("Arial", Font.PLAIN, 10));
            isValid = false;
        }

        // Validate room type
        if (roomType.isEmpty()) {
            rtValidation.setText("Field is empty");
            rtValidation.setForeground(Color.RED);
            rtValidation.setFont(new Font("Arial", Font.PLAIN, 10));
            isValid = false;
        }

        // Validate bed type (you can add more complex checks here if needed)
        if (bedType.isEmpty()) {
            btValidation.setText("Field is empty");
            btValidation.setForeground(Color.RED);
            btValidation.setFont(new Font("Arial", Font.PLAIN, 10));
            isValid = false;
        }

        // Validate capacity (only numeric values allowed)
        if (capacity.isEmpty()) {
            cValidation.setText("Field is empty");
            cValidation.setForeground(Color.RED);
            cValidation.setFont(new Font("Arial", Font.PLAIN, 10));
            isValid = false;
        } else if (!capacity.matches("\\d+")) {  // Check if input contains only digits
            cValidation.setText("Invalid input");
            cValidation.setForeground(Color.RED);
            cValidation.setFont(new Font("Arial", Font.PLAIN, 10));
            isValid = false;
        }

        // Validate price per night (you can also check if it's a valid number)
        if (pricePerNight.isEmpty()) {
            ppnValidation.setText("Field is empty");
            ppnValidation.setForeground(Color.RED);
            ppnValidation.setFont(new Font("Arial", Font.PLAIN, 10));
            isValid = false;
        } else if (!pricePerNight.matches("\\d+(\\.\\d{1,2})?")) {  // Optional: Check if pricePerNight is a valid number
            ppnValidation.setText("Invalid price");
            ppnValidation.setForeground(Color.RED);
            ppnValidation.setFont(new Font("Arial", Font.PLAIN, 10));
            isValid = false;
        }
        dbConnector con = new dbConnector();
        Connection conn = con.getConnection();
        if (isValid) {
            try {
                // Sample: You must have a selected room_id for the room you want to update
                int roomId = Integer.parseInt(roomIdField.getText().trim()); // or however you're tracking selected room ID

                String sql = "UPDATE room SET room_number = ?, room_type = ?, bed_type = ?, capacity = ?, price_per_night = ?, status = ? WHERE room_id = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);

                pstmt.setString(1, roomNumber);
                pstmt.setString(2, roomType);
                pstmt.setString(3, bedType);
                pstmt.setInt(4, Integer.parseInt(capacity));
                pstmt.setDouble(5, Double.parseDouble(pricePerNight));
                pstmt.setString(6, "Available"); // or whatever status logic you need
                pstmt.setInt(7, roomId);

                int rowsUpdated = pstmt.executeUpdate();

                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(null, "Room updated successfully!");
                    JDialog parentDialog = (JDialog) SwingUtilities.getWindowAncestor(this);
                    if (parentDialog != null) {
                        parentDialog.dispose();  // Closes the JDialog
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Room update failed. Check Room ID.");
                }

                pstmt.close();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Invalid numeric input.");
            }
        }


        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        JDialog parentDialog = (JDialog) SwingUtilities.getWindowAncestor(this);
        if (parentDialog != null) {
            parentDialog.dispose();  // Closes the JDialog
        }
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void roomIdFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomIdFieldMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomIdFieldMousePressed

    private void roomIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomIdFieldActionPerformed

    private void cancelButtonMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonMouseDragged

    private void btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public Swing.TextField bt;
    private javax.swing.JLabel btValidation;
    public Swing.TextField c;
    private javax.swing.JLabel cValidation;
    private javax.swing.JLabel cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    public Swing.TextField ppn;
    private javax.swing.JLabel ppnValidation;
    public Swing.TextField rn;
    private javax.swing.JLabel rnValidation;
    public Swing.TextField roomIdField;
    private Swing.RoundedPanel roundedPanel1;
    public Swing.TextField rt;
    private javax.swing.JLabel rtValidation;
    private Swing.Combobox status;
    private Swing.Button updateButton;
    // End of variables declaration//GEN-END:variables
}
